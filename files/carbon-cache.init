#!/bin/bash

PROG="carbon-cache.py"
PROG_NAME="carbon-cache"
PROG_PATH="/opt/graphite/bin"
PROG_LOG_DIR="/opt/graphite/storage/log/carbon-cache/carbon-cache-a"
PROG_ARGS=$1
PID_PATH="/var/run"

start() {
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        echo "$PROG_NAME is currently running!" 2>> $PROG_LOG_DIR/carbon-cache.log
        exit 1
    else
        $PROG_PATH/$PROG $PROG_ARGS 2>> $PROG_LOG_DIR/carbon-cache.log &
        echo "$PROG_NAME started" 2>> $PROG_LOG_DIR/carbon-cache.log
        touch "$PID_PATH/$PROG.pid"
    fi
}

stop() {
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        killall $PROG
        rm "$PID_PATH/$PROG.pid"
        echo "$PROG_NAME stopped" 2>> $PROG_LOG_DIR/carbon-cache.log
    else
        ## Program is not running, exit with error.
        echo "$PROG_NAME not started!" 2> $PROG_LOG_DIR/carbon-cache.log
        exit 1
    fi
}

status() {
    if [ -e "$PID_PATH/$PROG.pid" ]; then
        echo "$PROG_NAME is running" 2>> $PROG_LOG_DIR/carbon-cache.log
    else
        echo "$PROG_NAME is stopped" 2>> $PROG_LOG_DIR/carbon-cache.log
    fi
}

## Check to see if we are running as root first.
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 2>> $PROG_LOG_DIR/carbon-cache.log
    exit 1
fi

case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    status)
        status
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|status}" 1>&2
        exit 1
    ;;
esac
